{"ast":null,"code":"var _jsxFileName = \"/Users/hyphens/Desktop/AvatarAnalyzer/chat-app/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport ReactMarkdown from 'react-markdown';\nimport { BlockMath } from 'react-katex';\nimport { Upload, Send, Loader2, Image, MessageSquare, CheckCircle, AlertCircle } from 'lucide-react';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  apiKey\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentInput, setCurrentInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const onDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n    setIsLoading(true);\n    try {\n      // Add image message\n      const imageMessage = {\n        id: Date.now(),\n        type: 'image',\n        content: file,\n        timestamp: new Date(),\n        sender: 'user'\n      };\n      setMessages(prev => [...prev, imageMessage]);\n\n      // Analyze image with OCR\n      const ocrResult = await analyzeImage(file);\n\n      // Add OCR result message\n      const ocrMessage = {\n        id: Date.now() + 1,\n        type: 'ocr',\n        content: ocrResult,\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, ocrMessage]);\n\n      // Generate question based on OCR result\n      const questionResult = await generateQuestion(ocrResult);\n\n      // Add question message\n      const questionMessage = {\n        id: Date.now() + 2,\n        type: 'question',\n        content: questionResult,\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, questionMessage]);\n    } catch (error) {\n      console.error('Error processing image:', error);\n      const errorMessage = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Sorry, there was an error processing your image. Please try again.',\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.bmp', '.webp']\n    },\n    multiple: false\n  });\n  const analyzeImage = async file => {\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('apiKey', apiKey);\n    const response = await fetch('/api/analyze-image', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Failed to analyze image');\n    }\n    return await response.json();\n  };\n  const generateQuestion = async ocrResult => {\n    const response = await fetch('/api/generate-question', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ocrResult,\n        apiKey\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate question');\n    }\n    return await response.json();\n  };\n  const generateFeedback = async (userAnswer, questionData) => {\n    const response = await fetch('/api/generate-feedback', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userAnswer,\n        questionData,\n        apiKey\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate feedback');\n    }\n    return await response.json();\n  };\n  const handleSendMessage = async () => {\n    if (!currentInput.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'text',\n      content: currentInput,\n      timestamp: new Date(),\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setCurrentInput('');\n    setIsLoading(true);\n    try {\n      // Find the last question message to get context\n      const lastQuestionMessage = messages.slice().reverse().find(msg => msg.type === 'question');\n      if (lastQuestionMessage) {\n        const feedbackResult = await generateFeedback(currentInput, lastQuestionMessage.content);\n        const feedbackMessage = {\n          id: Date.now() + 1,\n          type: 'feedback',\n          content: feedbackResult,\n          timestamp: new Date(),\n          sender: 'assistant'\n        };\n        setMessages(prev => [...prev, feedbackMessage]);\n      }\n    } catch (error) {\n      console.error('Error generating feedback:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        content: 'Sorry, there was an error generating feedback. Please try again.',\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const renderMessage = message => {\n    const isUser = message.sender === 'user';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${isUser ? 'user' : 'assistant'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-avatar\",\n        children: isUser ? 'ðŸ‘¤' : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/ai-tutor-profile.png\",\n          alt: \"AI Tutor\",\n          style: {\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [message.type === 'image' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-message\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(message.content),\n            alt: \"Uploaded content\",\n            className: \"uploaded-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), message.type === 'ocr' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ocr-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Extracted Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ocr-content\",\n            children: [message.content.text && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Text:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.content.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), message.content.latex && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"latex-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Formulas:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(BlockMath, {\n                math: message.content.latex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), message.type === 'question' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Generated Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-content\",\n            children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), message.content.latex && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-latex\",\n              children: /*#__PURE__*/_jsxDEV(BlockMath, {\n                math: message.content.latex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), message.type === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), message.type === 'feedback' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Feedback & Follow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-content\",\n            children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: message.content.feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), message.content.followUpQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"follow-up-question\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Follow-up Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                children: message.content.followUpQuestion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), message.type === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-timestamp\",\n          children: message.timestamp.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: [messages.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-area\",\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Upload, {\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload an Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Drag and drop an image here, or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Supports: JPG, PNG, GIF, BMP, WebP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), messages.map(renderMessage), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/ai-tutor-profile.png\",\n              alt: \"AI Tutor\",\n              style: {\n                width: '100%',\n                height: '100%',\n                borderRadius: '50%',\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-message\",\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                size: 16,\n                className: \"animate-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uCC98\\uB9AC \\uC911...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: currentInput,\n            onChange: e => setCurrentInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Type your answer here...\",\n            disabled: isLoading,\n            rows: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"upload-button\",\n              onClick: () => {\n                var _document$querySelect;\n                return (_document$querySelect = document.querySelector('input[type=\"file\"]')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.click();\n              },\n              disabled: isLoading,\n              title: \"Upload Image\",\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"send-button\",\n              onClick: handleSendMessage,\n              disabled: !currentInput.trim() || isLoading,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-hint\",\n          children: \"Press Enter to send, Shift+Enter for new line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"4xEIbO2gGTlW3z+K3hdulK/CP2s=\", false, function () {\n  return [useDropzone];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDropzone","ReactMarkdown","BlockMath","Upload","Send","Loader2","Image","MessageSquare","CheckCircle","AlertCircle","jsxDEV","_jsxDEV","ChatInterface","apiKey","_s","messages","setMessages","currentInput","setCurrentInput","isLoading","setIsLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","onDrop","acceptedFiles","file","imageMessage","id","Date","now","type","content","timestamp","sender","prev","ocrResult","analyzeImage","ocrMessage","questionResult","generateQuestion","questionMessage","error","console","errorMessage","getRootProps","getInputProps","accept","multiple","formData","FormData","append","response","fetch","method","body","ok","Error","json","headers","JSON","stringify","generateFeedback","userAnswer","questionData","handleSendMessage","trim","userMessage","lastQuestionMessage","slice","reverse","find","msg","feedbackResult","feedbackMessage","handleKeyPress","e","key","shiftKey","preventDefault","renderMessage","message","isUser","className","children","src","alt","style","width","height","borderRadius","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","URL","createObjectURL","size","text","latex","math","question","feedback","followUpQuestion","toLocaleTimeString","length","map","ref","value","onChange","target","onKeyPress","placeholder","disabled","rows","onClick","_document$querySelect","document","querySelector","click","title","display","_c","$RefreshReg$"],"sources":["/Users/hyphens/Desktop/AvatarAnalyzer/chat-app/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport ReactMarkdown from 'react-markdown';\nimport { BlockMath } from 'react-katex';\nimport { Upload, Send, Loader2, Image, MessageSquare, CheckCircle, AlertCircle } from 'lucide-react';\nimport './ChatInterface.css';\n\nconst ChatInterface = ({ apiKey }) => {\n  const [messages, setMessages] = useState([]);\n  const [currentInput, setCurrentInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const onDrop = async (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    if (!file) return;\n\n    setIsLoading(true);\n\n    try {\n      // Add image message\n      const imageMessage = {\n        id: Date.now(),\n        type: 'image',\n        content: file,\n        timestamp: new Date(),\n        sender: 'user'\n      };\n      setMessages(prev => [...prev, imageMessage]);\n\n      // Analyze image with OCR\n      const ocrResult = await analyzeImage(file);\n      \n      // Add OCR result message\n      const ocrMessage = {\n        id: Date.now() + 1,\n        type: 'ocr',\n        content: ocrResult,\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, ocrMessage]);\n\n      // Generate question based on OCR result\n      const questionResult = await generateQuestion(ocrResult);\n      \n      // Add question message\n      const questionMessage = {\n        id: Date.now() + 2,\n        type: 'question',\n        content: questionResult,\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, questionMessage]);\n\n    } catch (error) {\n      console.error('Error processing image:', error);\n      const errorMessage = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Sorry, there was an error processing your image. Please try again.',\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.bmp', '.webp']\n    },\n    multiple: false\n  });\n\n  const analyzeImage = async (file) => {\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('apiKey', apiKey);\n\n    const response = await fetch('/api/analyze-image', {\n      method: 'POST',\n      body: formData\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to analyze image');\n    }\n\n    return await response.json();\n  };\n\n  const generateQuestion = async (ocrResult) => {\n    const response = await fetch('/api/generate-question', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ocrResult,\n        apiKey\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to generate question');\n    }\n\n    return await response.json();\n  };\n\n  const generateFeedback = async (userAnswer, questionData) => {\n    const response = await fetch('/api/generate-feedback', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        userAnswer,\n        questionData,\n        apiKey\n      })\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to generate feedback');\n    }\n\n    return await response.json();\n  };\n\n  const handleSendMessage = async () => {\n    if (!currentInput.trim() || isLoading) return;\n\n    const userMessage = {\n      id: Date.now(),\n      type: 'text',\n      content: currentInput,\n      timestamp: new Date(),\n      sender: 'user'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setCurrentInput('');\n    setIsLoading(true);\n\n    try {\n      // Find the last question message to get context\n      const lastQuestionMessage = messages\n        .slice()\n        .reverse()\n        .find(msg => msg.type === 'question');\n\n      if (lastQuestionMessage) {\n        const feedbackResult = await generateFeedback(currentInput, lastQuestionMessage.content);\n        \n        const feedbackMessage = {\n          id: Date.now() + 1,\n          type: 'feedback',\n          content: feedbackResult,\n          timestamp: new Date(),\n          sender: 'assistant'\n        };\n        setMessages(prev => [...prev, feedbackMessage]);\n      }\n    } catch (error) {\n      console.error('Error generating feedback:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'error',\n        content: 'Sorry, there was an error generating feedback. Please try again.',\n        timestamp: new Date(),\n        sender: 'assistant'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const renderMessage = (message) => {\n    const isUser = message.sender === 'user';\n    \n    return (\n      <div key={message.id} className={`message ${isUser ? 'user' : 'assistant'}`}>\n        <div className=\"message-avatar\">\n          {isUser ? 'ðŸ‘¤' : (\n            <img \n              src=\"/ai-tutor-profile.png\" \n              alt=\"AI Tutor\" \n              style={{ width: '100%', height: '100%', borderRadius: '50%', objectFit: 'cover' }}\n            />\n          )}\n        </div>\n        <div className=\"message-content\">\n          {message.type === 'image' && (\n            <div className=\"image-message\">\n              <img \n                src={URL.createObjectURL(message.content)} \n                alt=\"Uploaded content\"\n                className=\"uploaded-image\"\n              />\n            </div>\n          )}\n          \n          {message.type === 'ocr' && (\n            <div className=\"ocr-message\">\n              <div className=\"message-header\">\n                <Image size={16} />\n                <span>Extracted Content</span>\n              </div>\n              <div className=\"ocr-content\">\n                {message.content.text && (\n                  <div className=\"text-content\">\n                    <h4>Text:</h4>\n                    <p>{message.content.text}</p>\n                  </div>\n                )}\n                {message.content.latex && (\n                  <div className=\"latex-content\">\n                    <h4>Formulas:</h4>\n                    <BlockMath math={message.content.latex} />\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {message.type === 'question' && (\n            <div className=\"question-message\">\n              <div className=\"message-header\">\n                <MessageSquare size={16} />\n                <span>Generated Question</span>\n              </div>\n              <div className=\"question-content\">\n                <ReactMarkdown>{message.content.question}</ReactMarkdown>\n                {message.content.latex && (\n                  <div className=\"question-latex\">\n                    <BlockMath math={message.content.latex} />\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {message.type === 'text' && (\n            <div className=\"text-message\">\n              <p>{message.content}</p>\n            </div>\n          )}\n          \n          {message.type === 'feedback' && (\n            <div className=\"feedback-message\">\n              <div className=\"message-header\">\n                <CheckCircle size={16} />\n                <span>Feedback & Follow-up</span>\n              </div>\n              <div className=\"feedback-content\">\n                <ReactMarkdown>{message.content.feedback}</ReactMarkdown>\n                {message.content.followUpQuestion && (\n                  <div className=\"follow-up-question\">\n                    <h4>Follow-up Question:</h4>\n                    <ReactMarkdown>{message.content.followUpQuestion}</ReactMarkdown>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {message.type === 'error' && (\n            <div className=\"error-message\">\n              <div className=\"message-header\">\n                <AlertCircle size={16} />\n                <span>Error</span>\n              </div>\n              <p>{message.content}</p>\n            </div>\n          )}\n          \n          <div className=\"message-timestamp\">\n            {message.timestamp.toLocaleTimeString()}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-container\">\n        <div className=\"messages-container\">\n          {messages.length === 0 && !isLoading && (\n            <div className=\"empty-state\">\n              <div className=\"upload-area\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Upload size={48} />\n                <h3>Upload an Image</h3>\n                <p>Drag and drop an image here, or click to select</p>\n                <p className=\"upload-hint\">Supports: JPG, PNG, GIF, BMP, WebP</p>\n              </div>\n            </div>\n          )}\n          \n          {messages.map(renderMessage)}\n          \n          {isLoading && (\n            <div className=\"message assistant\">\n              <div className=\"message-avatar\">\n                <img \n                  src=\"/ai-tutor-profile.png\" \n                  alt=\"AI Tutor\" \n                  style={{ width: '100%', height: '100%', borderRadius: '50%', objectFit: 'cover' }}\n                />\n              </div>\n              <div className=\"message-content\">\n                <div className=\"loading-message\">\n                  <Loader2 size={16} className=\"animate-spin\" />\n                  <span>ì²˜ë¦¬ ì¤‘...</span>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <div className=\"input-container\">\n          <div className=\"input-wrapper\">\n            <textarea\n              value={currentInput}\n              onChange={(e) => setCurrentInput(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Type your answer here...\"\n              disabled={isLoading}\n              rows={1}\n            />\n            <div className=\"input-actions\">\n              <button\n                className=\"upload-button\"\n                onClick={() => document.querySelector('input[type=\"file\"]')?.click()}\n                disabled={isLoading}\n                title=\"Upload Image\"\n              >\n                <Upload size={20} />\n              </button>\n              <button\n                className=\"send-button\"\n                onClick={handleSendMessage}\n                disabled={!currentInput.trim() || isLoading}\n              >\n                <Send size={20} />\n              </button>\n            </div>\n          </div>\n          <div className=\"input-hint\">\n            Press Enter to send, Shift+Enter for new line\n          </div>\n        </div>\n      </div>\n      \n      {/* Hidden dropzone for the upload button */}\n      <div style={{ display: 'none' }}>\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}